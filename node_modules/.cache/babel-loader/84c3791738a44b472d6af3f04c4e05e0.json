{"ast":null,"code":"const allBeerLoaded = allBeer => {\n  return {\n    type: 'FETCH_ALL_BEER_SUCCESS',\n    payload: allBeer\n  };\n};\n\nconst allBeerRequested = () => {\n  return {\n    type: 'FETCH_ALL_BEER_REQUEST'\n  };\n};\n\nconst beerError = error => {\n  return {\n    type: 'FETCH_BEER_FAILURE',\n    payload: error\n  };\n};\n\nconst getSomeBeer = id => {\n  return {\n    type: 'SOME_BEER_REQUEST',\n    payload: id\n  };\n};\n\nconst fetchAllBeer = (dispatch, btdService) => () => {\n  dispatch(allBeerRequested());\n  btdService.getData().then(data => {\n    dispatch(allBeerLoaded(data));\n  }).catch(error => dispatch(beerError(error)));\n};\n\nexport { fetchAllBeer, getSomeBeer };","map":{"version":3,"sources":["C:/Users/droid/react-apps/beer_to_drink/src/actions/index.js"],"names":["allBeerLoaded","allBeer","type","payload","allBeerRequested","beerError","error","getSomeBeer","id","fetchAllBeer","dispatch","btdService","getData","then","data","catch"],"mappings":"AAAA,MAAMA,aAAa,GAAIC,OAAD,IAAa;AAC/B,SAAO;AACHC,IAAAA,IAAI,EAAE,wBADH;AAEHC,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALD;;AAMA,MAAMG,gBAAgB,GAAG,MAAM;AAC3B,SAAO;AACHF,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJD;;AAKA,MAAMG,SAAS,GAAIC,KAAD,IAAW;AACzB,SAAM;AACFJ,IAAAA,IAAI,EAAE,oBADJ;AAEFC,IAAAA,OAAO,EAAEG;AAFP,GAAN;AAIH,CALD;;AAMA,MAAMC,WAAW,GAAKC,EAAD,IAAQ;AACzB,SAAM;AACFN,IAAAA,IAAI,EAAE,mBADJ;AAEFC,IAAAA,OAAO,EAAEK;AAFP,GAAN;AAIH,CALD;;AAMA,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,UAAX,KAA0B,MAAM;AACjDD,EAAAA,QAAQ,CAACN,gBAAgB,EAAjB,CAAR;AACAO,EAAAA,UAAU,CACLC,OADL,GAEKC,IAFL,CAEWC,IAAD,IAAU;AACZJ,IAAAA,QAAQ,CAACV,aAAa,CAACc,IAAD,CAAd,CAAR;AACH,GAJL,EAKKC,KALL,CAKYT,KAAD,IAAWI,QAAQ,CAACL,SAAS,CAACC,KAAD,CAAV,CAL9B;AAMH,CARD;;AAUA,SAAQG,YAAR,EAAsBF,WAAtB","sourcesContent":["const allBeerLoaded = (allBeer) => {\r\n    return {\r\n        type: 'FETCH_ALL_BEER_SUCCESS',\r\n        payload: allBeer\r\n    }\r\n}\r\nconst allBeerRequested = () => {\r\n    return {\r\n        type: 'FETCH_ALL_BEER_REQUEST'\r\n    }\r\n}\r\nconst beerError = (error) => {\r\n    return{\r\n        type: 'FETCH_BEER_FAILURE',\r\n        payload: error\r\n    }\r\n}\r\nconst getSomeBeer =  (id) => {\r\n    return{\r\n        type: 'SOME_BEER_REQUEST',\r\n        payload: id\r\n    }\r\n}\r\nconst fetchAllBeer = (dispatch, btdService) => () => {\r\n    dispatch(allBeerRequested());\r\n    btdService\r\n        .getData()\r\n        .then((data) => {\r\n            dispatch(allBeerLoaded(data));\r\n        })\r\n        .catch((error) => dispatch(beerError(error)));\r\n}\r\n\r\nexport {fetchAllBeer, getSomeBeer};"]},"metadata":{},"sourceType":"module"}