{"ast":null,"code":"const allBeerRequested = () => {\n  return {\n    type: 'FETCH_ALL_BEER_REQUEST'\n  };\n};\n\nconst someBeerRequested = () => {\n  return {\n    type: 'FETCH_SOME_BEER_REQUEST'\n  };\n};\n\nconst allBeerLoaded = allBeer => {\n  return {\n    type: 'FETCH_ALL_BEER_SUCCESS',\n    payload: allBeer\n  };\n};\n\nconst someBeerLoaded = someBeer => {\n  return {\n    type: 'FETCH_SOME_BEER_SUCCESS',\n    payload: someBeer\n  };\n};\n\nconst beerError = error => {\n  return {\n    type: 'FETCH_BEER_FAILURE',\n    payload: error\n  };\n};\n\nconst getSomeBeer = id => {\n  return {\n    type: 'SOME_BEER_REQUEST',\n    payload: id\n  };\n};\n\nconst fetchAllBeer = (dispatch, btdService) => () => {\n  dispatch(allBeerRequested());\n  btdService.getData().then(data => {\n    dispatch(allBeerLoaded(data));\n  }).catch(error => dispatch(beerError(error)));\n};\n\nconst fetchSomeBeer = (dispatch, btdService) => () => {\n  dispatch(someBeerRequested());\n  btdService.getSomeData().then(data => {\n    dispatch(someBeerLoaded(data));\n  }).catch(error => dispatch(beerError(error)));\n};\n\nexport { fetchAllBeer, fetchSomeBeer, getSomeBeer };","map":{"version":3,"sources":["C:/Users/droid/react-apps/beer_to_drink/src/actions/index.js"],"names":["allBeerRequested","type","someBeerRequested","allBeerLoaded","allBeer","payload","someBeerLoaded","someBeer","beerError","error","getSomeBeer","id","fetchAllBeer","dispatch","btdService","getData","then","data","catch","fetchSomeBeer","getSomeData"],"mappings":"AAAA,MAAMA,gBAAgB,GAAG,MAAM;AAC3B,SAAO;AACHC,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJD;;AAKA,MAAMC,iBAAiB,GAAG,MAAM;AAC5B,SAAO;AACHD,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJD;;AAKA,MAAME,aAAa,GAAIC,OAAD,IAAa;AAC/B,SAAO;AACHH,IAAAA,IAAI,EAAE,wBADH;AAEHI,IAAAA,OAAO,EAAED;AAFN,GAAP;AAIH,CALD;;AAMA,MAAME,cAAc,GAAIC,QAAD,IAAc;AACjC,SAAO;AACHN,IAAAA,IAAI,EAAE,yBADH;AAEHI,IAAAA,OAAO,EAAEE;AAFN,GAAP;AAIH,CALD;;AAMA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AACzB,SAAM;AACFR,IAAAA,IAAI,EAAE,oBADJ;AAEFI,IAAAA,OAAO,EAAEI;AAFP,GAAN;AAIH,CALD;;AAMA,MAAMC,WAAW,GAAKC,EAAD,IAAQ;AACzB,SAAM;AACFV,IAAAA,IAAI,EAAE,mBADJ;AAEFI,IAAAA,OAAO,EAAEM;AAFP,GAAN;AAIH,CALD;;AAOA,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,UAAX,KAA0B,MAAM;AACjDD,EAAAA,QAAQ,CAACb,gBAAgB,EAAjB,CAAR;AACAc,EAAAA,UAAU,CACLC,OADL,GAEKC,IAFL,CAEWC,IAAD,IAAU;AACZJ,IAAAA,QAAQ,CAACV,aAAa,CAACc,IAAD,CAAd,CAAR;AACH,GAJL,EAKKC,KALL,CAKYT,KAAD,IAAWI,QAAQ,CAACL,SAAS,CAACC,KAAD,CAAV,CAL9B;AAMH,CARD;;AASA,MAAMU,aAAa,GAAG,CAACN,QAAD,EAAWC,UAAX,KAA0B,MAAM;AAClDD,EAAAA,QAAQ,CAACX,iBAAiB,EAAlB,CAAR;AACAY,EAAAA,UAAU,CACLM,WADL,GAEKJ,IAFL,CAEWC,IAAD,IAAU;AACZJ,IAAAA,QAAQ,CAACP,cAAc,CAACW,IAAD,CAAf,CAAR;AACH,GAJL,EAKKC,KALL,CAKYT,KAAD,IAAWI,QAAQ,CAACL,SAAS,CAACC,KAAD,CAAV,CAL9B;AAMH,CARD;;AAUA,SAAQG,YAAR,EAAsBO,aAAtB,EAAqCT,WAArC","sourcesContent":["const allBeerRequested = () => {\r\n    return {\r\n        type: 'FETCH_ALL_BEER_REQUEST'\r\n    }\r\n}\r\nconst someBeerRequested = () => {\r\n    return {\r\n        type: 'FETCH_SOME_BEER_REQUEST'\r\n    }\r\n}\r\nconst allBeerLoaded = (allBeer) => {\r\n    return {\r\n        type: 'FETCH_ALL_BEER_SUCCESS',\r\n        payload: allBeer\r\n    }\r\n}\r\nconst someBeerLoaded = (someBeer) => {\r\n    return {\r\n        type: 'FETCH_SOME_BEER_SUCCESS',\r\n        payload: someBeer\r\n    }\r\n}\r\nconst beerError = (error) => {\r\n    return{\r\n        type: 'FETCH_BEER_FAILURE',\r\n        payload: error\r\n    }\r\n}\r\nconst getSomeBeer =  (id) => {\r\n    return{\r\n        type: 'SOME_BEER_REQUEST',\r\n        payload: id\r\n    }\r\n}\r\n\r\nconst fetchAllBeer = (dispatch, btdService) => () => {\r\n    dispatch(allBeerRequested());\r\n    btdService\r\n        .getData()\r\n        .then((data) => {\r\n            dispatch(allBeerLoaded(data));\r\n        })\r\n        .catch((error) => dispatch(beerError(error)));\r\n}\r\nconst fetchSomeBeer = (dispatch, btdService) => () => {\r\n    dispatch(someBeerRequested());\r\n    btdService\r\n        .getSomeData()\r\n        .then((data) => {\r\n            dispatch(someBeerLoaded(data));\r\n        })\r\n        .catch((error) => dispatch(beerError(error)));\r\n}\r\n\r\nexport {fetchAllBeer, fetchSomeBeer, getSomeBeer};"]},"metadata":{},"sourceType":"module"}