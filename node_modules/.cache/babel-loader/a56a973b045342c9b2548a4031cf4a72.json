{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\droid\\\\react-apps\\\\beer_to_drink\\\\src\\\\components\\\\beer-page\\\\beer-page.js\";\nimport React, { Component } from \"react\";\nimport './beer-page.css';\nimport Spinner from \"../spinner\";\nimport { connect } from 'react-redux';\nimport Row from \"../row\";\nimport { fetchAllBeer } from \"../../actions\";\nimport WithBtdService from \"../../hoc\";\nimport { renderAllBeer } from \"./beer-list\";\n\nclass BeerPage extends Component {\n  componentDidMount() {\n    this.props.fetchAllBeer();\n  }\n\n  render() {\n    const {\n      allBeer,\n      loading,\n      error\n    } = this.props;\n    const beerList = renderAllBeer(allBeer);\n\n    if (loading) {\n      return /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 28\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Row, {\n      left: /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"item-list list-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }\n      }, beerList),\n      right: /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 22\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = ({\n  beer,\n  loading,\n  error\n}) => {\n  return {\n    allBeer: beer,\n    loading,\n    error\n  };\n};\n\nconst mapDispatchToProps = (dispatch, {\n  btdService\n}) => {\n  return {\n    fetchAllBeer: fetchAllBeer(dispatch, btdService)\n  };\n};\n\nexport default WithBtdService()(connect(mapStateToProps, mapDispatchToProps)(BeerPage));","map":{"version":3,"sources":["C:/Users/droid/react-apps/beer_to_drink/src/components/beer-page/beer-page.js"],"names":["React","Component","Spinner","connect","Row","fetchAllBeer","WithBtdService","renderAllBeer","BeerPage","componentDidMount","props","render","allBeer","loading","error","beerList","mapStateToProps","beer","mapDispatchToProps","dispatch","btdService"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,iBAAP;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,SAAQC,YAAR,QAA2B,eAA3B;AACA,OAAOC,cAAP,MAA2B,WAA3B;AACA,SAASC,aAAT,QAA8B,aAA9B;;AAEA,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAC7BQ,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWL,YAAX;AACH;;AAEDM,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA,OAAD;AAAUC,MAAAA,OAAV;AAAmBC,MAAAA;AAAnB,QAA4B,KAAKJ,KAAvC;AACA,UAAMK,QAAQ,GAAGR,aAAa,CAACK,OAAD,CAA9B;;AACA,QAAGC,OAAH,EAAW;AAAC,0BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAAkB;;AAC9B,wBACI,oBAAC,GAAD;AAAK,MAAA,IAAI,eACL;AAAI,QAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKE,QADL,CADJ;AAIE,MAAA,KAAK,eAAE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAQH;;AAjB4B;;AAoBjC,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOJ,EAAAA,OAAP;AAAgBC,EAAAA;AAAhB,CAAD,KAA4B;AAChD,SAAM;AACFF,IAAAA,OAAO,EAAEK,IADP;AAEFJ,IAAAA,OAFE;AAGFC,IAAAA;AAHE,GAAN;AAKH,CAND;;AAOA,MAAMI,kBAAkB,GAAG,CAACC,QAAD,EAAW;AAACC,EAAAA;AAAD,CAAX,KAA4B;AACnD,SAAM;AACFf,IAAAA,YAAY,EAACA,YAAY,CAACc,QAAD,EAAWC,UAAX;AADvB,GAAN;AAGH,CAJD;;AAMA,eAAed,cAAc,GAAGH,OAAO,CAACa,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CV,QAA7C,CAAH,CAA7B","sourcesContent":["import React, { Component } from \"react\";\r\nimport './beer-page.css';\r\nimport Spinner from \"../spinner\";\r\nimport { connect } from 'react-redux';\r\nimport Row from \"../row\";\r\nimport {fetchAllBeer} from \"../../actions\";\r\nimport WithBtdService from \"../../hoc\";\r\nimport { renderAllBeer } from \"./beer-list\";\r\n\r\nclass BeerPage extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchAllBeer();\r\n    }\r\n    \r\n    render(){\r\n        const {allBeer, loading, error} = this.props;\r\n        const beerList = renderAllBeer(allBeer);\r\n        if(loading){return <Spinner/>}\r\n        return(\r\n            <Row left={\r\n                <ul className='item-list list-group'>\r\n                    {beerList}\r\n                </ul>\r\n            } right={<Spinner/>}/>\r\n        )\r\n\r\n    }\r\n\r\n}\r\nconst mapStateToProps = ({beer, loading, error}) => {\r\n    return{\r\n        allBeer: beer,\r\n        loading,\r\n        error\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, {btdService}) => {\r\n    return{\r\n        fetchAllBeer:fetchAllBeer(dispatch, btdService)\r\n    }\r\n}\r\n\r\nexport default WithBtdService()(connect(mapStateToProps, mapDispatchToProps)(BeerPage));"]},"metadata":{},"sourceType":"module"}