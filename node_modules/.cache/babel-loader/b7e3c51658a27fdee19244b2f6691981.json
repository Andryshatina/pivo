{"ast":null,"code":"var allBeerRequested=function allBeerRequested(){return{type:'FETCH_ALL_BEER_REQUEST'};};var someBeerRequested=function someBeerRequested(){return{type:'FETCH_SOME_BEER_REQUEST'};};var allBeerLoaded=function allBeerLoaded(allBeer){return{type:'FETCH_ALL_BEER_SUCCESS',payload:allBeer};};var someBeerLoaded=function someBeerLoaded(someBeer){return{type:'FETCH_SOME_BEER_SUCCESS',payload:someBeer};};var beerError=function beerError(error){return{type:'FETCH_BEER_FAILURE',payload:error};};var getSomeBeer=function getSomeBeer(id){return{type:'SOME_BEER_REQUEST',payload:id};};var fetchAllBeer=function fetchAllBeer(dispatch,btdService){return function(){dispatch(allBeerRequested());btdService.getData().then(function(data){dispatch(allBeerLoaded(data));}).catch(function(error){return dispatch(beerError(error));});};};var fetchSomeBeer=function fetchSomeBeer(dispatch,btdService){return function(){dispatch(someBeerRequested());btdService.getSomeData().then(function(data){dispatch(someBeerLoaded(data));}).catch(function(error){return dispatch(beerError(error));});};};export{fetchAllBeer,fetchSomeBeer,getSomeBeer};","map":{"version":3,"sources":["C:/Users/droid/react-apps/beer_to_drink/src/actions/index.js"],"names":["allBeerRequested","type","someBeerRequested","allBeerLoaded","allBeer","payload","someBeerLoaded","someBeer","beerError","error","getSomeBeer","id","fetchAllBeer","dispatch","btdService","getData","then","data","catch","fetchSomeBeer","getSomeData"],"mappings":"AAAA,GAAMA,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC3B,MAAO,CACHC,IAAI,CAAE,wBADH,CAAP,CAGH,CAJD,CAKA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC5B,MAAO,CACHD,IAAI,CAAE,yBADH,CAAP,CAGH,CAJD,CAKA,GAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,OAAD,CAAa,CAC/B,MAAO,CACHH,IAAI,CAAE,wBADH,CAEHI,OAAO,CAAED,OAFN,CAAP,CAIH,CALD,CAMA,GAAME,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,QAAD,CAAc,CACjC,MAAO,CACHN,IAAI,CAAE,yBADH,CAEHI,OAAO,CAAEE,QAFN,CAAP,CAIH,CALD,CAMA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CACzB,MAAM,CACFR,IAAI,CAAE,oBADJ,CAEFI,OAAO,CAAEI,KAFP,CAAN,CAIH,CALD,CAMA,GAAMC,CAAAA,WAAW,CAAI,QAAfA,CAAAA,WAAe,CAACC,EAAD,CAAQ,CACzB,MAAM,CACFV,IAAI,CAAE,mBADJ,CAEFI,OAAO,CAAEM,EAFP,CAAN,CAIH,CALD,CAOA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,QAAD,CAAWC,UAAX,QAA0B,WAAM,CACjDD,QAAQ,CAACb,gBAAgB,EAAjB,CAAR,CACAc,UAAU,CACLC,OADL,GAEKC,IAFL,CAEU,SAACC,IAAD,CAAU,CACZJ,QAAQ,CAACV,aAAa,CAACc,IAAD,CAAd,CAAR,CACH,CAJL,EAKKC,KALL,CAKW,SAACT,KAAD,QAAWI,CAAAA,QAAQ,CAACL,SAAS,CAACC,KAAD,CAAV,CAAnB,EALX,EAMH,CARoB,EAArB,CASA,GAAMU,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACN,QAAD,CAAWC,UAAX,QAA0B,WAAM,CAClDD,QAAQ,CAACX,iBAAiB,EAAlB,CAAR,CACAY,UAAU,CACLM,WADL,GAEKJ,IAFL,CAEU,SAACC,IAAD,CAAU,CACZJ,QAAQ,CAACP,cAAc,CAACW,IAAD,CAAf,CAAR,CACH,CAJL,EAKKC,KALL,CAKW,SAACT,KAAD,QAAWI,CAAAA,QAAQ,CAACL,SAAS,CAACC,KAAD,CAAV,CAAnB,EALX,EAMH,CARqB,EAAtB,CAUA,OAAQG,YAAR,CAAsBO,aAAtB,CAAqCT,WAArC","sourcesContent":["const allBeerRequested = () => {\r\n    return {\r\n        type: 'FETCH_ALL_BEER_REQUEST'\r\n    }\r\n}\r\nconst someBeerRequested = () => {\r\n    return {\r\n        type: 'FETCH_SOME_BEER_REQUEST'\r\n    }\r\n}\r\nconst allBeerLoaded = (allBeer) => {\r\n    return {\r\n        type: 'FETCH_ALL_BEER_SUCCESS',\r\n        payload: allBeer\r\n    }\r\n}\r\nconst someBeerLoaded = (someBeer) => {\r\n    return {\r\n        type: 'FETCH_SOME_BEER_SUCCESS',\r\n        payload: someBeer\r\n    }\r\n}\r\nconst beerError = (error) => {\r\n    return{\r\n        type: 'FETCH_BEER_FAILURE',\r\n        payload: error\r\n    }\r\n}\r\nconst getSomeBeer =  (id) => {\r\n    return{\r\n        type: 'SOME_BEER_REQUEST',\r\n        payload: id\r\n    }\r\n}\r\n\r\nconst fetchAllBeer = (dispatch, btdService) => () => {\r\n    dispatch(allBeerRequested());\r\n    btdService\r\n        .getData()\r\n        .then((data) => {\r\n            dispatch(allBeerLoaded(data));\r\n        })\r\n        .catch((error) => dispatch(beerError(error)));\r\n}\r\nconst fetchSomeBeer = (dispatch, btdService) => () => {\r\n    dispatch(someBeerRequested());\r\n    btdService\r\n        .getSomeData()\r\n        .then((data) => {\r\n            dispatch(someBeerLoaded(data));\r\n        })\r\n        .catch((error) => dispatch(beerError(error)));\r\n}\r\n\r\nexport {fetchAllBeer, fetchSomeBeer, getSomeBeer};"]},"metadata":{},"sourceType":"module"}