{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\droid\\\\react-apps\\\\beer_to_drink\\\\src\\\\components\\\\rand-beer-page\\\\rand-beer-page.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { fetchAllBeer, fetchSomeBeer } from \"../../actions\";\nimport WithBtdService from \"../../hoc\";\nimport { connect } from \"react-redux\";\nimport BeerDetails from \"../beer-details\";\nimport Spinner from \"../spinner\";\nimport { Link } from \"react-router-dom\";\nimport './rand-beer-page.css';\n\nclass RandBeerPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.howMuch = () => {\n      let rand = Math.floor(Math.random() * 3);\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }\n      }, \"\\u0414\\u0443\\u043C\\u0430\\u044E, \", rand, \"\\u043B \\u0431\\u0443\\u0434\\u0435 \\u0432 \\u0441\\u0430\\u043C\\u0438\\u0439 \\u0440\\u0430\\u0437\");\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchSomeBeer();\n  }\n\n  render() {\n    const {\n      currentBeer\n    } = this.props;\n\n    if (this.props.loading === true) {\n      return /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 20\n        }\n      });\n    }\n\n    let f = false;\n    const liter = f ? this.howMuch() : null;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BeerDetails, {\n      currentBeer: currentBeer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }), liter, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary btn-lg btn-block\",\n      onClick: this.f = true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, \"\\u0421\\u043A\\u0456\\u043B\\u044C\\u043A\\u0438?\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      style: {\n        textDecoration: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-secondary btn-lg btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }, \"\\u041D\\u0430\\u0437\\u0430\\u0434 \\u043D\\u0430 \\u0433\\u043E\\u043B\\u043E\\u0432\\u043D\\u0443\")));\n  }\n\n}\n\nconst mapStateToProps = ({\n  loading,\n  currentBeer\n}) => {\n  return {\n    loading,\n    currentBeer\n  };\n};\n\nconst mapDispatchToProps = (dispatch, {\n  btdService\n}) => {\n  return {\n    fetchAllBeer: fetchAllBeer(dispatch, btdService),\n    fetchSomeBeer: fetchSomeBeer(dispatch, btdService)\n  };\n};\n\nexport default WithBtdService()(connect(mapStateToProps, mapDispatchToProps)(RandBeerPage));","map":{"version":3,"sources":["C:/Users/droid/react-apps/beer_to_drink/src/components/rand-beer-page/rand-beer-page.js"],"names":["React","Component","Fragment","fetchAllBeer","fetchSomeBeer","WithBtdService","connect","BeerDetails","Spinner","Link","RandBeerPage","howMuch","rand","Math","floor","random","componentDidMount","props","render","currentBeer","loading","f","liter","textDecoration","mapStateToProps","mapDispatchToProps","dispatch","btdService"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,OAAOC,cAAP,MAA2B,WAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAO,sBAAP;;AAEA,MAAMC,YAAN,SAA2BT,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAKjCU,OALiC,GAKvB,MAAM;AACZ,UAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,CAAzB,CAAX;AACA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACYH,IADZ,6FADJ;AAKH,KAZgC;AAAA;;AACjCI,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWb,aAAX;AACH;;AAUDc,EAAAA,MAAM,GAAE;AAEJ,UAAM;AAACC,MAAAA;AAAD,QAAgB,KAAKF,KAA3B;;AACA,QAAG,KAAKA,KAAL,CAAWG,OAAX,KAAuB,IAA1B,EAAgC;AAC5B,0BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AACD,QAAIC,CAAC,GAAG,KAAR;AACA,UAAMC,KAAK,GAAGD,CAAC,GAAG,KAAKV,OAAL,EAAH,GAAoB,IAAnC;AACA,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAa,MAAA,WAAW,EAAEQ,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEKG,KAFL,eAGI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,kCAAhC;AAAmE,MAAA,OAAO,EAAE,KAAKD,CAAL,GAAS,IAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAHJ,eAII,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,KAAK,EAAE;AAAEE,QAAAA,cAAc,EAAE;AAAlB,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,SAAS,EAAC,oCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gGADJ,CAJJ,CADJ;AAWH;;AAhCgC;;AAkCrC,MAAMC,eAAe,GAAG,CAAC;AAACJ,EAAAA,OAAD;AAAUD,EAAAA;AAAV,CAAD,KAA4B;AAChD,SAAM;AACFC,IAAAA,OADE;AAEFD,IAAAA;AAFE,GAAN;AAIH,CALD;;AAMA,MAAMM,kBAAkB,GAAG,CAACC,QAAD,EAAW;AAACC,EAAAA;AAAD,CAAX,KAA4B;AACnD,SAAM;AACFxB,IAAAA,YAAY,EAAEA,YAAY,CAACuB,QAAD,EAAWC,UAAX,CADxB;AAEFvB,IAAAA,aAAa,EAAEA,aAAa,CAACsB,QAAD,EAAWC,UAAX;AAF1B,GAAN;AAIH,CALD;;AAOA,eAAetB,cAAc,GAAGC,OAAO,CAACkB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6Cf,YAA7C,CAAH,CAA7B","sourcesContent":["import React, {Component, Fragment} from \"react\";\r\nimport { fetchAllBeer, fetchSomeBeer } from \"../../actions\";\r\nimport WithBtdService from \"../../hoc\";\r\nimport {connect} from \"react-redux\";\r\nimport BeerDetails from \"../beer-details\";\r\nimport Spinner from \"../spinner\";\r\nimport {Link} from \"react-router-dom\";\r\nimport './rand-beer-page.css';\r\n\r\nclass RandBeerPage extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchSomeBeer();\r\n    }\r\n\r\n    howMuch = () => {\r\n        let rand = Math.floor(Math.random()*3);\r\n        return(\r\n            <span>\r\n                Думаю, {rand}л буде в самий раз\r\n            </span>\r\n        )\r\n    }\r\n    render(){\r\n\r\n        const {currentBeer} = this.props;\r\n        if(this.props.loading === true) {\r\n            return(<Spinner/>)\r\n        }\r\n        let f = false;\r\n        const liter = f ? this.howMuch() : null;\r\n        return(\r\n            <Fragment>\r\n                <BeerDetails currentBeer={currentBeer}/>\r\n                {liter}\r\n                <button type=\"button\" className=\"btn btn-primary btn-lg btn-block\" onClick={this.f = true}>Скільки?</button>\r\n                <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n                    <button className='btn btn-secondary btn-lg btn-block'>Назад на головну</button>\r\n                </Link>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = ({loading, currentBeer}) => {\r\n    return{\r\n        loading,\r\n        currentBeer\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, {btdService}) => {\r\n    return{\r\n        fetchAllBeer: fetchAllBeer(dispatch, btdService),\r\n        fetchSomeBeer: fetchSomeBeer(dispatch, btdService)\r\n    }\r\n}\r\n\r\nexport default WithBtdService()(connect(mapStateToProps, mapDispatchToProps)(RandBeerPage));"]},"metadata":{},"sourceType":"module"}